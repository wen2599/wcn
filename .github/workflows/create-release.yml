# ==============================================================================
#  GitHub Action: Create Release on Main Branch Update
#
#  WARNING: This workflow creates a new GitHub Release on EVERY push to the
#  'main' branch, which can clutter your releases page. Use with caution.
# ==============================================================================

name: Create Release on Main Branch Update

# ------------------------------------------------------------------------------
#  Triggers
#  MODIFIED: Triggers on every push to the 'main' branch.
# ------------------------------------------------------------------------------
on:
  push:
    branches:
      - main

# ------------------------------------------------------------------------------
#  Jobs
# ------------------------------------------------------------------------------
jobs:
  release-android:
    runs-on: ubuntu-latest
    steps:
      # --- 1. SETUP ---
      - name: 1.1 Checkout Repository
        uses: actions/checkout@v4

      - name: 1.2 Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: 1.3 Set up Java Development Kit (JDK)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 1.4 Setup Android SDK
        uses: actions/setup-android@v3

      # --- 2. BUILD ---
      - name: 2.1 Install Dependencies and Build Web App
        run: |
          npm install
          cd frontend
          npm install
          npm run build
          cd ..
      
      - name: 2.2 Install Capacitor Android and Sync
        run: |
          npm install @capacitor/android
          npx cap sync android
          
      - name: 2.3 Decode and Place Keystore
        run: echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/my-release-key.keystore

      - name: 2.4 Grant execute permission for gradlew
        run: chmod +x android/gradlew
      
      - name: 2.5 Generate Version Name
        id: versioning
        # MODIFIED: Create a dynamic version name from date and commit hash
        run: echo "version_name=dev-$(date +'%Y%m%d')-${{ github.sha_short }}" >> $GITHUB_OUTPUT

      - name: 2.6 Build Signed Release APK with Versioning
        working-directory: ./android
        run: ./gradlew assembleRelease \
          -PappVersionCode=${{ github.run_number }} \
          -PappVersionName=${{ steps.versioning.outputs.version_name }} \
          -Pandroid.injected.signing.store.file="${{ github.workspace }}/android/app/my-release-key.keystore" \
          -Pandroid.injected.signing.store.password="${{ secrets.KEYSTORE_PASSWORD }}" \
          -Pandroid.injected.signing.key.alias="${{ secrets.KEY_ALIAS }}" \
          -Pandroid.injected.signing.key.password="${{ secrets.KEY_PASSWORD }}"
      
      # --- 3. RELEASE ---
      - name: 3.1 Rename APK for Release
        run: mv android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/apk/release/Thirteen-Game-${{ steps.versioning.outputs.version_name }}.apk

      - name: 3.2 Create GitHub Release and Upload APK
        uses: softprops/action-gh-release@v1
        with:
          # MODIFIED: Use the new dynamic version name for the release title
          name: "Dev Build ${{ steps.versioning.outputs.version_name }}"
          # MODIFIED: Use a unique tag for each release to avoid conflicts
          tag_name: "dev-build-${{ github.run_number }}"
          generate_release_notes: true
          # Mark these as pre-releases so they don't look like official versions
          prerelease: true
          files: android/app/build/outputs/apk/release/Thirteen-Game-*.apk
