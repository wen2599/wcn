apply plugin: 'com.android.application'

android {
    namespace "com.gamelobby.thirteen.wcn"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.gamelobby.thirteen.wcn"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        // (已修改) 动态版本号
        versionCode project.hasProperty('appVersionCode') ? project.property('appVersionCode').toInteger() : 1
        versionName project.hasProperty('appVersionName') ? project.property('appVersionName') : "1.0"
        
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // ======================= 建议的额外修改 =======================
    // 将Java编译级别与我们的构建环境(JDK 21)对齐，避免潜在的兼容性问题
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17 // 或者 JavaVersion.VERSION_21，但17通常更兼容
        targetCompatibility JavaVersion.VERSION_17 // 保持与上面一致
    }
    // 如果你的项目中有Kotlin代码，也需要更新kotlinOptions
    // kotlinOptions {
    //     jvmTarget = '17'
    // }
    // ==========================================================
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
