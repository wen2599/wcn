// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.2'
        classpath 'com.google.gms:google-services:4.4.2'
    }
}

// Global project configuration
ext {
    minSdkVersion = 23
    compileSdkVersion = 35
    targetSdkVersion = 35
    androidxActivityVersion = '1.9.2'
    androidxAppCompatVersion = '1.7.0'
    androidxCoordinatorLayoutVersion = '1.2.0'
    androidxCoreVersion = '1.15.0'
    androidxFragmentVersion = '1.8.4'
    coreSplashScreenVersion = '1.0.1'
    androidxWebkitVersion = '1.12.1'
    junitVersion = '4.13.2'
    androidxJunitVersion = '1.2.1'
    androidxEspressoCoreVersion = '3.6.1'
    cordovaAndroidVersion = '10.1.1'
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

// --- 终极修复：全局强制应用签名配置 ---
subprojects {
    afterEvaluate { project ->
        if (project.hasProperty('android')) {
            android {
                signingConfigs {
                    release {
                        def keystorePropertiesFile = rootProject.file('keystore.properties')
                        if (keystorePropertiesFile.exists()) {
                            def keystoreProperties = new Properties()
                            keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
                            storeFile file(keystoreProperties['MYAPP_RELEASE_STORE_FILE'])
                            storePassword keystoreProperties['MYAPP_RELEASE_STORE_PASSWORD']
                            keyAlias keystoreProperties['MYAPP_RELEASE_KEY_ALIAS']
                            keyPassword keystoreProperties['MYAPP_RELEASE_KEY_PASSWORD']
                            storeType "PKCS12"
                        }
                    }
                }
                buildTypes {
                    release {
                        signingConfig signingConfigs.release
                    }
                }
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}
